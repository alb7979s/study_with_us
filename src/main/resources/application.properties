#server.address=172.31.14.197
server.port=5000

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 설정
spring.datasource.url=jdbc:mysql://localhost:3306/ssafy_web_db?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true

spring.datasource.username=ssafy
spring.datasource.password=ssafy
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

jwt.header=authorization
jwt.secret=Y2xvbmVjb252ZXJzZS1qd3Qtc2VjcmV0a2V5LWpvbmdoeWVvay1uYXZlci1nYXp1YWFhYWFhYWFhYXVhYWFhYWFhYWFhYWFhYQ==
jwt.token-validity-in-seconds=86400

paging.size = 20

# jpa로 table 생성할지
spring.jpa.hibernate.ddl-auto=create
# app 실행시 data.sql 실행되도록
spring.jpa.defer-datasource-initialization=true